SETUP SERVER
	apt upgrade
	apt update
	apt install pwgen

	adduser deployer --ingroup admin
	  (assign password)
	reboot

	log in as deployer

BASIC INSTALLATION - Some of this might be from Capistrano
	sudo apt install postgresql
	sudo apt install imagemagick
	sudo apt install redis-server

	File structure
	Go to ~deployer and run upgrade/scripts/run_from_home/create_directory_structure
		mkdir apps
		mkdir apps/ipo-web
		mkdir apps/ipo-web/releases
		mkdir apps/ipo-web/shared
		mkdir apps/ipo-web/shared/assets
		mkdir apps/ipo-web/shared/config
		mkdir apps/ipo-web/shared/log
		mkdir apps/ipo-web/shared/pids
		mkdir apps/ipo-web/shared/system
		mkdir apps/ipo-web/shared/uploads

GET THE CODE
  cd ~/apps/ipo-web/releases
  git clone https://github.com/ipoconnection/ipo-web.git
  mv ipo-web YYYYMMDD
  cd ~/apps/ipo-web
  ln -s releases/YYYYMMDD current
 
GET THE DEV BRANCH (for upgrade only)
  cd current
  git fetch
  git checkout upgrade-rails-4.0

SETUP RUBY BUNDLER
	sudo apt install ruby-bundler

	Run upgrade/scripts/run_from_approot/setup_bundle to run the following configuration:
		bundle config --local frozen 1
		bundle config --local path "/home/deployer/apps/ipo-web/shared/bundle"
		bundle config --local without "development:test"
		bundle config --local disable_shared_gems 1

INSTALL rbenv
	curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash
	echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
	echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
	restart terminal and login to apply those bash profile changes

	rbenv install 2.3.7
	rbenv global 2.3.7

POSTGRES
* set postgres password for user postgres
  sudo -u postgres psql
    \password
      enter and confirm new password

    CREATE USER ipoweb;
    CREATE DATABASE ipoweb_production WITH OWNER = ipoweb;
    \q 

  sudo vim /etc/postgresql/10/main/pg_hba.conf
  change the line for postgres user from peer to md5
        OLD
        local   all             postgres                               peer
        NEW
        local   all             postgres                               md5

  change the line for all local users from peer to md5
        OLD
        local   all             all                               peer
        NEW
        local   all             all                               md5

sudo /etc/init.d/postgresql reload

psql -U ipoweb ipoweb_production < SQL_DUMP

**** I'm not sure how necessary this PG step is ****
psql -U postgres 
     REVOKE ALL ON SCHEMA public FROM PUBLIC;
     REVOKE ALL ON SCHEMA public FROM postgres;
     GRANT ALL ON SCHEMA public TO postgres;
     GRANT ALL ON SCHEMA public TO PUBLIC;

	
CONFIGURATION 
Copy into ~/apps/ipo-web/shared/config/ from ~/upgrade/config
     braintree.yml
     database.yml
     mandrill.yml
     sf_api.yml
     sidekiq.yml
     unicorn.yml

run make_links.sh from the app directory (~/apps/ipo-web/current)
	ln -s /home/deployer/apps/ipo-web/shared/assets public/assets
	ln -s /home/deployer/apps/ipo-web/shared/system public/system
	ln -s /home/deployer/apps/ipo-web/shared/uploads public/uploads
	ln -s /home/deployer/apps/ipo-web/shared/config/braintree.yml braintree.yml
	ln -s /home/deployer/apps/ipo-web/shared/config/database.yml database.yml
	ln -s /home/deployer/apps/ipo-web/shared/config/mandrill.yml mandrill.yml
	ln -s /home/deployer/apps/ipo-web/shared/config/sf_api.yml sf_api.yml
	mkdir tmp
	ls -s /home/deployer/apps/ipo-web/shared/pids tmp/pids

	
OTHER RANDOM INSTALLS
rbenv local 2.3.7
rbenv exec gem install bundler

sudo apt install libpq-dev
sudo apt install libmagickwand-dev
bundle install

I DON'T REMEMBER WHAT I HAD TO DO FOR RMAGICK
change rmagick version

sudo apt install nginx
cp ~/upgrade/etc/ipo-web /etc/nginx/sites-enabled

ADD SSL CERTIFICATES
mkdir certs
cd certs
# self signed cert
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ywamconverge.key -out ywamconverge_chained.crt

(I don't remember what Node is used for)
sudo apt install nodejs

FINAL SETUP
You'll have to make sure the 
rake db:migrate
rbenv exec bundle exec rake assets:precompile

INSTALL UPLOADED DATA
cd ~/apps/ipo-web/current/public/system
cp ~/upgrade/data/refinery_20190304.tar.gz .
gunzip refinery_20190304.tar.gz
tar -xf refinery_20190304.tar

cd ~/apps/ipo-web/current/public/uploads
cp ~/upgrade/data/uploads_20190304.tar.gz .
gunzip uploads_20190304.tar.gz
tar -xf uploads_20190304.tar


SYSTEMD SETUP
  sudo cp ~/upgrade/config/systemd/unicorn_ipo-web.service /etc/systemd/system
  sudo cp ~/upgrade/config/systemd/sidekiq_ipo-web.service /etc/systemd/system
  sudo systemctl enable /etc/systemd/system/unicorn_ipo-web.service
  sudo systemctl enable /etc/systemd/system/sidekiq_ipo-web.service
  sudo systemctl start unicorn_ipo-web.service
  sudo systemctl start sidekiq_ipo-web.service


ELASTIC SEARCH
(Elastic is currently disabled, so this could be skipped for now)
Elastic search setup
* Tell package manager to point to Elastic repositories
  (From https://www.elastic.rbco/guide/en/elasticsearch/reference/current/deb.html)
    wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
    echo "deb https://artifacts.elastic.co/packages/6.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-6.x.list
* Install elasticsearch
    sudo apt-get update && sudo apt-get install elasticsearch
* Change Elastic memory utilization
* Set up service
    sudo systemctl daemon-reload
    sudo systemctl enable elasticsearch.service
    sudo systemctl start elasticsearch.service
* Index refinery
    rbenv exec bundle exec script/rails console production
    Refinery::Page.reindex
    Project.reindex

Update DNS:
       Rackspace -> CloudDNS
